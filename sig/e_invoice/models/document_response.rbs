module EInvoice
  module Models
    type document_response =
      {
        id: String,
        amount_due: String?,
        attachments: ::Array[EInvoice::Documents::DocumentAttachment],
        billing_address: String?,
        billing_address_recipient: String?,
        currency: EInvoice::Models::currency_code,
        customer_address: String?,
        customer_address_recipient: String?,
        customer_email: String?,
        customer_id: String?,
        customer_name: String?,
        customer_tax_id: String?,
        direction: EInvoice::Models::document_direction,
        document_type: EInvoice::Models::document_type,
        due_date: Date?,
        invoice_date: Date?,
        invoice_id: String?,
        invoice_total: String?,
        items: ::Array[EInvoice::DocumentResponse::Item],
        note: String?,
        payment_details: ::Array[EInvoice::DocumentResponse::PaymentDetail],
        payment_term: String?,
        previous_unpaid_balance: String?,
        purchase_order: String?,
        remittance_address: String?,
        remittance_address_recipient: String?,
        service_address: String?,
        service_address_recipient: String?,
        service_end_date: Date?,
        service_start_date: Date?,
        shipping_address: String?,
        shipping_address_recipient: String?,
        state: EInvoice::Models::document_state,
        subtotal: String?,
        tax_details: ::Array[EInvoice::DocumentResponse::TaxDetail],
        total_discount: String?,
        total_tax: String?,
        vendor_address: String?,
        vendor_address_recipient: String?,
        vendor_email: String?,
        vendor_name: String?,
        vendor_tax_id: String?
      }

    class DocumentResponse < EInvoice::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor amount_due: String?

      attr_reader attachments: ::Array[EInvoice::Documents::DocumentAttachment]?

      def attachments=: (
        ::Array[EInvoice::Documents::DocumentAttachment]
      ) -> ::Array[EInvoice::Documents::DocumentAttachment]

      attr_accessor billing_address: String?

      attr_accessor billing_address_recipient: String?

      attr_reader currency: EInvoice::Models::currency_code?

      def currency=: (
        EInvoice::Models::currency_code
      ) -> EInvoice::Models::currency_code

      attr_accessor customer_address: String?

      attr_accessor customer_address_recipient: String?

      attr_accessor customer_email: String?

      attr_accessor customer_id: String?

      attr_accessor customer_name: String?

      attr_accessor customer_tax_id: String?

      attr_reader direction: EInvoice::Models::document_direction?

      def direction=: (
        EInvoice::Models::document_direction
      ) -> EInvoice::Models::document_direction

      attr_reader document_type: EInvoice::Models::document_type?

      def document_type=: (
        EInvoice::Models::document_type
      ) -> EInvoice::Models::document_type

      attr_accessor due_date: Date?

      attr_accessor invoice_date: Date?

      attr_accessor invoice_id: String?

      attr_accessor invoice_total: String?

      attr_reader items: ::Array[EInvoice::DocumentResponse::Item]?

      def items=: (
        ::Array[EInvoice::DocumentResponse::Item]
      ) -> ::Array[EInvoice::DocumentResponse::Item]

      attr_accessor note: String?

      attr_reader payment_details: ::Array[EInvoice::DocumentResponse::PaymentDetail]?

      def payment_details=: (
        ::Array[EInvoice::DocumentResponse::PaymentDetail]
      ) -> ::Array[EInvoice::DocumentResponse::PaymentDetail]

      attr_accessor payment_term: String?

      attr_accessor previous_unpaid_balance: String?

      attr_accessor purchase_order: String?

      attr_accessor remittance_address: String?

      attr_accessor remittance_address_recipient: String?

      attr_accessor service_address: String?

      attr_accessor service_address_recipient: String?

      attr_accessor service_end_date: Date?

      attr_accessor service_start_date: Date?

      attr_accessor shipping_address: String?

      attr_accessor shipping_address_recipient: String?

      attr_reader state: EInvoice::Models::document_state?

      def state=: (
        EInvoice::Models::document_state
      ) -> EInvoice::Models::document_state

      attr_accessor subtotal: String?

      attr_reader tax_details: ::Array[EInvoice::DocumentResponse::TaxDetail]?

      def tax_details=: (
        ::Array[EInvoice::DocumentResponse::TaxDetail]
      ) -> ::Array[EInvoice::DocumentResponse::TaxDetail]

      attr_accessor total_discount: String?

      attr_accessor total_tax: String?

      attr_accessor vendor_address: String?

      attr_accessor vendor_address_recipient: String?

      attr_accessor vendor_email: String?

      attr_accessor vendor_name: String?

      attr_accessor vendor_tax_id: String?

      def initialize: (
        id: String,
        ?amount_due: String?,
        ?attachments: ::Array[EInvoice::Documents::DocumentAttachment],
        ?billing_address: String?,
        ?billing_address_recipient: String?,
        ?currency: EInvoice::Models::currency_code,
        ?customer_address: String?,
        ?customer_address_recipient: String?,
        ?customer_email: String?,
        ?customer_id: String?,
        ?customer_name: String?,
        ?customer_tax_id: String?,
        ?direction: EInvoice::Models::document_direction,
        ?document_type: EInvoice::Models::document_type,
        ?due_date: Date?,
        ?invoice_date: Date?,
        ?invoice_id: String?,
        ?invoice_total: String?,
        ?items: ::Array[EInvoice::DocumentResponse::Item],
        ?note: String?,
        ?payment_details: ::Array[EInvoice::DocumentResponse::PaymentDetail],
        ?payment_term: String?,
        ?previous_unpaid_balance: String?,
        ?purchase_order: String?,
        ?remittance_address: String?,
        ?remittance_address_recipient: String?,
        ?service_address: String?,
        ?service_address_recipient: String?,
        ?service_end_date: Date?,
        ?service_start_date: Date?,
        ?shipping_address: String?,
        ?shipping_address_recipient: String?,
        ?state: EInvoice::Models::document_state,
        ?subtotal: String?,
        ?tax_details: ::Array[EInvoice::DocumentResponse::TaxDetail],
        ?total_discount: String?,
        ?total_tax: String?,
        ?vendor_address: String?,
        ?vendor_address_recipient: String?,
        ?vendor_email: String?,
        ?vendor_name: String?,
        ?vendor_tax_id: String?
      ) -> void

      def to_hash: -> {
        id: String,
        amount_due: String?,
        attachments: ::Array[EInvoice::Documents::DocumentAttachment],
        billing_address: String?,
        billing_address_recipient: String?,
        currency: EInvoice::Models::currency_code,
        customer_address: String?,
        customer_address_recipient: String?,
        customer_email: String?,
        customer_id: String?,
        customer_name: String?,
        customer_tax_id: String?,
        direction: EInvoice::Models::document_direction,
        document_type: EInvoice::Models::document_type,
        due_date: Date?,
        invoice_date: Date?,
        invoice_id: String?,
        invoice_total: String?,
        items: ::Array[EInvoice::DocumentResponse::Item],
        note: String?,
        payment_details: ::Array[EInvoice::DocumentResponse::PaymentDetail],
        payment_term: String?,
        previous_unpaid_balance: String?,
        purchase_order: String?,
        remittance_address: String?,
        remittance_address_recipient: String?,
        service_address: String?,
        service_address_recipient: String?,
        service_end_date: Date?,
        service_start_date: Date?,
        shipping_address: String?,
        shipping_address_recipient: String?,
        state: EInvoice::Models::document_state,
        subtotal: String?,
        tax_details: ::Array[EInvoice::DocumentResponse::TaxDetail],
        total_discount: String?,
        total_tax: String?,
        vendor_address: String?,
        vendor_address_recipient: String?,
        vendor_email: String?,
        vendor_name: String?,
        vendor_tax_id: String?
      }

      type item =
        {
          amount: String?,
          date: nil,
          description: String?,
          product_code: String?,
          quantity: String?,
          tax: String?,
          tax_rate: String?,
          unit: EInvoice::Models::unit_of_measure_code?,
          unit_price: String?
        }

      class Item < EInvoice::Internal::Type::BaseModel
        attr_accessor amount: String?

        attr_accessor date: nil

        attr_accessor description: String?

        attr_accessor product_code: String?

        attr_accessor quantity: String?

        attr_accessor tax: String?

        attr_accessor tax_rate: String?

        attr_accessor unit: EInvoice::Models::unit_of_measure_code?

        attr_accessor unit_price: String?

        def initialize: (
          ?amount: String?,
          ?date: nil,
          ?description: String?,
          ?product_code: String?,
          ?quantity: String?,
          ?tax: String?,
          ?tax_rate: String?,
          ?unit: EInvoice::Models::unit_of_measure_code?,
          ?unit_price: String?
        ) -> void

        def to_hash: -> {
          amount: String?,
          date: nil,
          description: String?,
          product_code: String?,
          quantity: String?,
          tax: String?,
          tax_rate: String?,
          unit: EInvoice::Models::unit_of_measure_code?,
          unit_price: String?
        }
      end

      type payment_detail =
        {
          bank_account_number: String?,
          iban: String?,
          payment_reference: String?,
          swift: String?
        }

      class PaymentDetail < EInvoice::Internal::Type::BaseModel
        attr_accessor bank_account_number: String?

        attr_accessor iban: String?

        attr_accessor payment_reference: String?

        attr_accessor swift: String?

        def initialize: (
          ?bank_account_number: String?,
          ?iban: String?,
          ?payment_reference: String?,
          ?swift: String?
        ) -> void

        def to_hash: -> {
          bank_account_number: String?,
          iban: String?,
          payment_reference: String?,
          swift: String?
        }
      end

      type tax_detail = { amount: String?, rate: String? }

      class TaxDetail < EInvoice::Internal::Type::BaseModel
        attr_accessor amount: String?

        attr_accessor rate: String?

        def initialize: (?amount: String?, ?rate: String?) -> void

        def to_hash: -> { amount: String?, rate: String? }
      end
    end
  end
end
